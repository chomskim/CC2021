service: ep2020-notes-api
package:
  individually: true

plugins:
  - serverless-bundle 
  - serverless-offline
  - serverless-dotenv-plugin 

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: ap-northeast-2

  environment:
    DYNAMODB_TABLE: ep2020-notes-table

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Scan
        - dynamodb:Query
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:DescribeTable
      Resource:
        - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"

functions:
  create:
    handler: create.main
    events:
      - http:
          path: notes
          method: post
          cors: true
          authorizer: aws_iam

  get:
    handler: get.main
    events:
      - http:
          path: notes/{id}
          method: get
          cors: true
          authorizer: aws_iam

  list:
    handler: list.main
    events:
      - http:
          path: notes
          method: get
          cors: true
          authorizer: aws_iam

  update:
    handler: update.main
    events:
      - http:
          path: notes/{id}
          method: put
          cors: true
          authorizer: aws_iam

  delete:
    handler: delete.main
    events:
      - http:
          path: notes/{id}
          method: delete
          cors: true
          authorizer: aws_iam

  listby:
    handler: listby.main
    events:
      - http:
          path: notes/by/{email}
          method: get
          cors: true
          authorizer: aws_iam

  listbyRoom:
    handler: listbyRoom.main
    events:
      - http:
          path: notes/room/{room}
          method: get
          cors: true
          authorizer: aws_iam

resources:
  - ${file(resources/api-gateway-errors.yml)}
